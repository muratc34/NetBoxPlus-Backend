// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieAPI.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MovieAPI.Migrations
{
    [DbContext(typeof(MovieContext))]
    partial class MovieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MovieAPI.Model.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("GenreCode")
                        .HasColumnType("integer");

                    b.Property<string>("GenreTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Genres", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("deb36810-6e9d-4e8f-9f7e-b4856509fe42"),
                            GenreCode = 1,
                            GenreTitle = "Aksiyon",
                            MovieId = new Guid("43e3434b-c570-4c6c-bc16-7b62c183cde9")
                        },
                        new
                        {
                            Id = new Guid("8dc1695a-5f22-4246-98f9-c0a08f76bd83"),
                            GenreCode = 1,
                            GenreTitle = "Aksiyon",
                            MovieId = new Guid("0d26828a-e2d4-4e1e-99e8-c850b6b84cbf")
                        },
                        new
                        {
                            Id = new Guid("d8c38547-2721-41fe-93a2-47693ab00300"),
                            GenreCode = 2,
                            GenreTitle = "Macera",
                            MovieId = new Guid("43e3434b-c570-4c6c-bc16-7b62c183cde9")
                        },
                        new
                        {
                            Id = new Guid("fefbffe2-bd9d-44cf-b78a-8871783ae509"),
                            GenreCode = 2,
                            GenreTitle = "Macera",
                            MovieId = new Guid("0d26828a-e2d4-4e1e-99e8-c850b6b84cbf")
                        },
                        new
                        {
                            Id = new Guid("40a295f6-3dcd-46ec-93e7-c98f8311cad3"),
                            GenreCode = 2,
                            GenreTitle = "Macera",
                            MovieId = new Guid("14b24a0e-6c17-4bda-802a-a0c31325cd16")
                        },
                        new
                        {
                            Id = new Guid("98c27043-4f59-42b1-b9ad-5ab6330b8bfe"),
                            GenreCode = 4,
                            GenreTitle = "Komedi",
                            MovieId = new Guid("14b24a0e-6c17-4bda-802a-a0c31325cd16")
                        },
                        new
                        {
                            Id = new Guid("e0265f7c-3a1c-4ba6-960f-c04ccb271efa"),
                            GenreCode = 9,
                            GenreTitle = "Fantastik",
                            MovieId = new Guid("14b24a0e-6c17-4bda-802a-a0c31325cd16")
                        },
                        new
                        {
                            Id = new Guid("907af036-93e8-4b2c-bacf-84bdf3414a2f"),
                            GenreCode = 15,
                            GenreTitle = "Bilim Kurgu",
                            MovieId = new Guid("43e3434b-c570-4c6c-bc16-7b62c183cde9")
                        },
                        new
                        {
                            Id = new Guid("070ecd47-2425-47c8-b51c-2661a80a5931"),
                            GenreCode = 15,
                            GenreTitle = "Bilim Kurgu",
                            MovieId = new Guid("0d26828a-e2d4-4e1e-99e8-c850b6b84cbf")
                        },
                        new
                        {
                            Id = new Guid("4055ee8f-def7-4d20-88eb-c70ec0456839"),
                            GenreCode = 18,
                            GenreTitle = "Batılı",
                            MovieId = new Guid("14b24a0e-6c17-4bda-802a-a0c31325cd16")
                        });
                });

            modelBuilder.Entity("MovieAPI.Model.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BackdropPicPath")
                        .HasColumnType("text");

                    b.Property<int>("MovieClickCount")
                        .HasColumnType("integer");

                    b.Property<string>("MovieDescription")
                        .HasColumnType("text");

                    b.Property<string>("MoviePath")
                        .HasColumnType("text");

                    b.Property<string>("MpaaRating")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PosterPath")
                        .HasColumnType("text");

                    b.Property<int>("ReleaseYear")
                        .HasMaxLength(4)
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TrailerPath")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("43e3434b-c570-4c6c-bc16-7b62c183cde9"),
                            BackdropPicPath = "/backdrops/2b0c25864b3142e38ef89e3818ac026b.jpg",
                            MovieClickCount = 0,
                            MovieDescription = "Komutan Logar, halı tüccarı Arif'i zamanda bir milyon yıl geriye gönderir. Burada dinozorlarla karşılaşan Arif, sakalını tıraş etmenin bir yolunu da bulur.",
                            MpaaRating = "P13",
                            PosterPath = "/images/7c176488167c4a389acf5eea903db08b.jpg",
                            ReleaseYear = 2008,
                            Title = "A.R.O.G",
                            TrailerPath = "/trailers/881bc6d2b70047aea0da2bc39f437e85.mp4"
                        },
                        new
                        {
                            Id = new Guid("0d26828a-e2d4-4e1e-99e8-c850b6b84cbf"),
                            BackdropPicPath = "/backdrops/92a1013355f641098dbfb8ada29d378d.jpg",
                            MovieClickCount = 0,
                            MovieDescription = "Sahte UFO fotoğrafçısı ve halı tüccarı olan Arif uzaylılarca kaçırılır. Gora gezegeninde, yaklaşan göktaşından kurtulmak ve özgür kalmak için arkadaşlarına yardım eder.",
                            MpaaRating = "P18",
                            PosterPath = "/images/3ebd25faf255400a94f923db9a020d0c.jpg",
                            ReleaseYear = 2004,
                            Title = "G.O.R.A",
                            TrailerPath = "/trailers/21caaee63a934d40adbbac4c09fbe97d.mp4"
                        },
                        new
                        {
                            Id = new Guid("14b24a0e-6c17-4bda-802a-a0c31325cd16"),
                            BackdropPicPath = "/backdrops/8af11b4faa4645f986553222ae2af034.jpg",
                            MovieClickCount = 0,
                            MovieDescription = "İki Osmanlı yetkilisi, sultanlarının adına ABD başkanına elmas bir kolye teslim etmek üzere cesurca Vahşi Batı'ya gider. Ama yaşanan kaos yüzünden bu görev raydan çıkar.",
                            MpaaRating = "P18",
                            PosterPath = "/images/bb9434b7c54546488964dd2cc7687067.jpg",
                            ReleaseYear = 2009,
                            Title = "Yahşi Batı",
                            TrailerPath = "/trailers/20a27c60c72e4f58a2cad022214de908.mp4"
                        });
                });

            modelBuilder.Entity("MovieAPI.Model.Genre", b =>
                {
                    b.HasOne("MovieAPI.Model.Movie", null)
                        .WithMany("Genres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieAPI.Model.Movie", b =>
                {
                    b.Navigation("Genres");
                });
#pragma warning restore 612, 618
        }
    }
}
