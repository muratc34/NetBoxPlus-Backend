// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SubscriptionAPI.Infrastructure;

#nullable disable

namespace SubscriptionAPI.Migrations
{
    [DbContext(typeof(SubscriptionContext))]
    [Migration("20230529150327_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SubscriptionAPI.Model.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("PlanName")
                        .HasColumnType("text");

                    b.Property<int>("ProfileCount")
                        .HasColumnType("integer");

                    b.Property<string>("Quality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Plans", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0494158e-41b6-4399-97e5-60cd004ca972"),
                            Amount = 0m,
                            ProfileCount = 1,
                            Quality = "HD"
                        },
                        new
                        {
                            Id = new Guid("0318768b-675e-4647-b8bb-d53e9743917b"),
                            Amount = 0m,
                            ProfileCount = 2,
                            Quality = "FHD"
                        },
                        new
                        {
                            Id = new Guid("b3d21573-3eb0-48c8-8f68-519bde071d52"),
                            Amount = 0m,
                            ProfileCount = 3,
                            Quality = "UHD"
                        });
                });

            modelBuilder.Entity("SubscriptionAPI.Model.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("SubscriptionExpiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("SubscriptionStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("SubscriptionStatus")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("edd2a38a-5670-41fb-b997-52042cc68e36"),
                            PlanId = new Guid("0494158e-41b6-4399-97e5-60cd004ca972"),
                            SubscriptionExpiration = new DateTimeOffset(new DateTime(2023, 6, 28, 18, 3, 27, 464, DateTimeKind.Unspecified).AddTicks(3125), new TimeSpan(0, 3, 0, 0, 0)),
                            SubscriptionStartDate = new DateTimeOffset(new DateTime(2023, 5, 29, 18, 3, 27, 464, DateTimeKind.Unspecified).AddTicks(3165), new TimeSpan(0, 3, 0, 0, 0)),
                            SubscriptionStatus = true,
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
